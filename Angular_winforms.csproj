<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="7.0.1" />
    <PackageReference Include="bootstrap" Version="5.1.3" />
    <PackageReference Include="EntityFramework" Version="6.4.4" />
    <PackageReference Include="EntityFramework.Extended" Version="6.1.0.168" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.13" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.14" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.14" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer.Design" Version="1.1.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.15">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.6.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="5.0.1" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
    <PackageReference Include="Node.js" Version="5.3.0" />
    <PackageReference Include="Npm" Version="3.5.2" />
    <PackageReference Include="NPOI" Version="2.5.5" />
    <PackageReference Include="NuGet.Frameworks" Version="5.11.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\check-license\check-license.component.ts" />
    <None Remove="ClientApp\src\app\open-configuration - Copy (2)\open-configuration.component.ts" />
    <None Remove="ClientApp\src\app\open-configuration\open-configuration.component.ts" />
    <None Remove="ClientApp\src\app\open-project\open-project.component.ts" />
    <None Remove="ClientApp\src\app\save-configuration\save-configuration.component.ts" />
    <None Remove="ClientApp\src\app\_models\Axial_loads_on_fixed_bearings.ts" />
    <None Remove="ClientApp\src\app\_models\Compensators_WITH_GROOVLOCK_STAINLESS_STEEL_PIPE.ts" />
    <None Remove="ClientApp\src\app\_models\Compensators_with_screwed_flanged_and_staimless_steel_pipes.ts" />
    <None Remove="ClientApp\src\app\_models\Compensators_with_Welding_PIPES.ts" />
    <None Remove="ClientApp\src\app\_models\Dependence_of_the_coefficient_of_linear.ts" />
    <None Remove="ClientApp\src\app\_models\InputsForm1.ts" />
    <None Remove="ClientApp\src\app\_models\Supports_for_piping_DN15_100.ts" />
    <None Remove="ClientApp\src\app\_models\Supports_for_piping_DN15_40.ts" />
    <None Remove="ClientApp\src\app\_models\Supports_for_piping_DN50_200.ts" />
    <None Remove="ClientApp\src\app\_services\data.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Remove="ClientApp\src\app\about-the-program\about-the-program.component.spec.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\about-the-program\about-the-program.component.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\filling\filling.component.spec.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\filling\filling.component.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Update="ClientApp\src\app\check-license\check-license.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Update="ClientApp\src\app\open-configuration\open-configuration.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Update="ClientApp\src\app\save-configuration\save-configuration.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Update="ClientApp\src\app\save-project\save-project.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
